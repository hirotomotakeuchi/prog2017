def rect(x, y, a):
  turtle.up()
  turtle.home()
  turtle.forward(x)
  turtle.left(90)
  turtle.forward(y)
  turtle.down()
  for i in range(4):
    turtle.forward(a)
    turtle.down()
    turtle.left(-90)
    
    
t.clear()
rect(10,10,100)

関数：複数の処理をひとまとめにしたもの

オブジェクト：複数の性質と複数の関数をひとまとめにしたもの

num=12
random.randint(1,num)

＃サイコロの設計図（クラス）
clase Dice:
  face_num=6
  def shoot(self):
    return random.randint(1,self.face_num)
    
    
aDice=Dice()＃クラスをもとにオブジェクトを作る
aDice,shoot()＃オブジェクトを使う    

aDice.face_num=10000
aDice.shoot()

クラス：オブジェクトの設計図
-オブジェクト：データと操作をまとめたもの

クラス派生：クラスをもとに、別のクラスを作ること。新しいクラスは、元のクラスの性質を「継承」する

181．CUI GUI

標準出力：画面に出力
「＜」を使ってファイルにリダイレクト
「＞＞」で追記

標準入力：キーボードから入力
「」

import sys

for line in sys.stadin:
  print('(((';line.strip()+')))')

s=0
for line in sys.stdin:
  s+=int(line.strip())
  
print(i)